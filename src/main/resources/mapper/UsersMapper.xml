<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hospital.mapper.UsersMapper">

    <resultMap type="com.hospital.entity.Users" id="UsersMap">
        <result property="userId" column="userId" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="realName" column="realName" jdbcType="VARCHAR"/>
        <result property="sex" column="sex" jdbcType="INTEGER"/>
        <result property="identityCard" column="identityCard" jdbcType="VARCHAR"/>
        <result property="birthday" column="birthday" jdbcType="TIMESTAMP"/>
        <result property="userType" column="userType" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="UsersMap">
        select
userId, password, realName, sex, identityCard, birthday, userType
        from users
        where userId = #{userId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAll" resultMap="UsersMap">
        select
userId, password, realName, sex, identityCard, birthday, userType
        from users
        <where>
            <if test="userId != null and userId != ''">
                and userId = #{userId}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="realName != null and realName != ''">
                and realName = #{realName}
            </if>
            <if test="sex != null">
                and sex = #{sex}
            </if>
            <if test="identityCard != null and identityCard != ''">
                and identityCard = #{identityCard}
            </if>
            <if test="birthday != null">
                and birthday = #{birthday}
            </if>
            <if test="userType != null">
                and userType = #{userType}
            </if>
        </where>
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(*)
        from users
        <where>
            <if test="userId != null and userId != ''">
                and userId = #{userId}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="realName != null and realName != ''">
                and realName = #{realName}
            </if>
            <if test="sex != null">
                and sex = #{sex}
            </if>
            <if test="identityCard != null and identityCard != ''">
                and identityCard = #{identityCard}
            </if>
            <if test="birthday != null">
                and birthday = #{birthday}
            </if>
            <if test="userType != null">
                and userType = #{userType}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="userId" useGeneratedKeys="true">
        insert into users(password, realName, sex, identityCard, birthday, userType)
        values (#{password}, #{realName}, #{sex}, #{identityCard}, #{birthday}, #{userType})
    </insert>

    <insert id="insertBatch" keyProperty="userId" useGeneratedKeys="true">
        insert into users(password, realName, sex, identityCard, birthday, userType)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.password}, #{entity.realName}, #{entity.sex}, #{entity.identityCard}, #{entity.birthday}, #{entity.userType})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="userId" useGeneratedKeys="true">
        insert into users(password, realName, sex, identityCard, birthday, userType)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.password}, #{entity.realName}, #{entity.sex}, #{entity.identityCard}, #{entity.birthday}, #{entity.userType})
        </foreach>
        on duplicate key update
password = values(password),
realName = values(realName),
sex = values(sex),
identityCard = values(identityCard),
birthday = values(birthday),
userType = values(userType)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update users
        <set>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="realName != null and realName != ''">
                realName = #{realName},
            </if>
            <if test="sex != null">
                sex = #{sex},
            </if>
            <if test="identityCard != null and identityCard != ''">
                identityCard = #{identityCard},
            </if>
            <if test="birthday != null">
                birthday = #{birthday},
            </if>
            <if test="userType != null">
                userType = #{userType},
            </if>
        </set>
        where userId = #{userId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from users where userId = #{userId}
    </delete>

</mapper>


